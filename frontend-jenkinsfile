def COLOR_MAP = ['SUCCESS': 'good', 'FAILURE': 'danger', 'UNSTABLE': 'danger', 'ABORTED': 'danger']

pipeline {
    agent any
    environment {
        PROJECT_ID = 'melodic-nature-248204'
        CLUSTER_NAME = 'capstone-cluster'
        LOCATION = 'us-central1-a'
        CREDENTIALS_ID = 'gke-capstone'
        NAMESPACE = 'capstone'
    }
    tools { nodejs "NodeJs10.0" }
    stages {
        stage('Build') {
            steps {
                sh 'npm run ng -- build --aot --output-hashing=all'
            }
        }
        stage('Docker Build') {
            steps {
                script {
                    docker.build("vigneshsweekaran/easyclaim-frontend:${env.BUILD_ID}")
                }
            }
        }
		stage('Functional Testing') {
		    steps{
			    sh "docker run --name easyclaim-frontend -d -p 80:80 vigneshsweekaran/easyclaim-frontend:${env.BUILD_ID}"
			    sh "pytest -v -s --html=functional_result.html testing/test_pytest.py"
				sh "docker stop easyclaim-frontend"
				sh "docker rm easyclaim-frontend"
			}
		}
		stage('Pushing Docker Image to DockerHub') {
            steps {
                script {
                    docker.withRegistry('https://registry.hub.docker.com', 'docker_credential') {
                        docker.image("vigneshsweekaran/easyclaim-frontend:${env.BUILD_ID}").push()
                        docker.image("vigneshsweekaran/easyclaim-frontend:latest").push()
                    }
                }
				sh "docker image prune -a -f"
            }
        }
        stage('Deploy to GKE') {
            steps{
                sh "sed -i 's/easyclaim-frontend:latest/easyclaim-frontend:${env.BUILD_ID}/g' k8s-deployment.yml"
                step([$class: 'KubernetesEngineBuilder', projectId: env.PROJECT_ID, clusterName: env.CLUSTER_NAME, location: env.LOCATION, manifestPattern: 'k8s-deployment.yml', credentialsId: env.CREDENTIALS_ID, namespace: env.NAMESPACE, verifyDeployments: true])
            }
        }
    }
	post {
        always {
            slackSend channel: '#capstone-easyclaim',
                color: COLOR_MAP[currentBuild.currentResult],
                message: "*${currentBuild.currentResult}:* Job ${env.JOB_NAME} build ${env.BUILD_NUMBER}\n More info at: ${env.BUILD_URL}"
        }
    }
}